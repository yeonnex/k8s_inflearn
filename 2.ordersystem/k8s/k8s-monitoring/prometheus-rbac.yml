# rbac : Role-Based Access Control
# ClusterRole : Kubernetes 클러스터 전체에 대해 권한 정의
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
rules:
# apiGroups가 "" 인경우 core그룹(pods, serivce, nodes 등)
# apps그룹은 depl, svc 등
  - apiGroups: [""]
  # 노드에 대한 권한
    resources: ["nodes", "nodes/metrics"]
  # 조회권한 : kubectl get node, kubectl get nodes, kubectl get node --watch
    verbs: ["get", "list", "watch"]
---
# 2. ServiceAccount : Pod를 위한 계정
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: monitoring
---
# 3. ClusterRoleBinding: cluster role을 serviceaccount에 연결
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
# rbac는 roles, rolebindings, clusterroles등
# 다른 api그룹 자원들간의 매핑에서는 apiGroup명시 필수
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
# serviceAccount자원은 core그룹에 속하므로 생략가능
  - kind: ServiceAccount
    name: prometheus
    namespace: monitoring